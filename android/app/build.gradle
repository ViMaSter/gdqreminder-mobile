apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
import groovy.json.JsonSlurper

def getVersionFromPackageJson() {
    def inputFile = new File("$rootDir/../package.json")
    def packageJson = new JsonSlurper().parseText(inputFile.text)
    def versionCodeArray = packageJson["version"].split("\\.")
    def versionCode = versionCodeArray[0].toInteger() * 100000000 + versionCodeArray[1].toInteger() * 10000 + versionCodeArray[2].toInteger()
    def versionName = packageJson["version"];

    return [versionCode: versionCode, versionName: versionName]
}

android {

    namespace 'ke.mahn.gdqreminder'
    defaultConfig {
        applicationId "ke.mahn.gdqreminder"
        compileSdk rootProject.ext.compileSdkVersion
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode getVersionFromPackageJson().versionCode
        versionName getVersionFromPackageJson().versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
             // Files and dirs to omit from the packaged assets dir, modified to accommodate modern web apps.
             // Default: https://android.googlesource.com/platform/frameworks/base/+/282e181b58cf72b6ca770dc7ca5f91f135444502/tools/aapt/AaptAssets.cpp#61
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
        vectorDrawables.useSupportLibrary = true
    }
    signingConfigs {
        release {
            // You need to specify either an absolute path or include the
            // keystore file in the same directory as the build.gradle file.
            storeFile file("my-release-key.jks")
            storePassword "password"
            keyAlias "my-alias"
            keyPassword "password"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        buildConfig = true
    }
    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'capacitor-cordova-android-plugins/src/main/java']
        }
    }
}

dependencies {
    implementation platform('com.google.firebase:firebase-bom:30.1.0')
    implementation("com.google.guava:guava:33.0.0-android")
    implementation('com.google.firebase:firebase-iid')
    implementation 'com.google.firebase:firebase-messaging'
    implementation("com.google.firebase:firebase-auth")
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation project(':capacitor-android')
    implementation 'androidx.work:work-runtime:2.9.0'
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
    implementation project(':capacitor-cordova-android-plugins')
}

apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}
