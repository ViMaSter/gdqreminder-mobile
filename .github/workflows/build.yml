name: Mobile App build

on:
  push:
    branches:
      - main
      - beta
  pull_request:
  workflow_dispatch:
    inputs:
      forceProductionRelease:
        description: Force Google Play Production release?
        required: true
        default: false
        type: boolean
      forceBetaRelease:
        description: Force Google Play Beta release?
        required: true
        default: false
        type: boolean

env:
  SENTRY_AUTH_TOKEN: ${{ (((github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event.inputs.forceProductionRelease) || ((github.event_name == 'push' && github.ref == 'refs/heads/beta') || github.event.inputs.forceBetaRelease)) && secrets.SENTRY_AUTH_TOKEN || '' }}

jobs:
  prepareCache:
    name: Pre-build + test
    runs-on: ubuntu-latest
    outputs:
      SENTRY_RELEASE: ${{ steps.version.outputs.SENTRY_RELEASE }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ (((github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event.inputs.forceProductionRelease) || ((github.event_name == 'push' && github.ref == 'refs/heads/beta') || github.event.inputs.forceBetaRelease)) && secrets.PAT || secrets.GITHUB_TOKEN }}
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - run: | 
          npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npm run test:e2e
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
      - run: | 
          npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ((github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event.inputs.forceProductionRelease) || ((github.event_name == 'push' && github.ref == 'refs/heads/beta') || github.event.inputs.forceBetaRelease)
      - id: version
        run: | 
          version=v$(jq -r .version package.json)
          echo $version
          echo "SENTRY_RELEASE=$version" >> $GITHUB_OUTPUT
          echo "SENTRY_RELEASE=$version" >> $GITHUB_ENV
          export SENTRY_RELEASE=$version
          SENTRY_RELEASE=$version
          npm run build
      - run: npx cap sync android

      - uses: actions/cache@v4
        with:
          path: |
            ./*
          key: ${{ github.run_id }}
          
  buildAAB:
    name: Build AAB
    runs-on: ubuntu-latest
    needs: [prepareCache]
    env:
      SENTRY_RELEASE: ${{ needs.prepareCache.outputs.SENTRY_RELEASE }}
    steps:
      - uses: actions/cache@v4
        with:
          path: |
            ./*
          key: ${{ github.run_id }}

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: gradle

      - run: cd android && ./gradlew :app:bundleRelease
        shell: bash

      - uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: aab-${{ needs.prepareCache.outputs.SENTRY_RELEASE }}
          path: ./android/app/build/outputs/bundle/release/app-release.aab

  buildAPK:
    name: Build APK
    runs-on: ubuntu-latest
    needs: [prepareCache]
    env:
      SENTRY_RELEASE: ${{ needs.prepareCache.outputs.SENTRY_RELEASE }}
    steps:
      - uses: actions/cache@v4
        with:
          path: |
            ./*
          key: ${{ github.run_id }}

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: gradle

      - run: cd android && ./gradlew assembleDebug
        shell: bash

      - uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: apk-${{ needs.prepareCache.outputs.SENTRY_RELEASE }}
          path: ./android/app/build/outputs/apk/debug/app-debug.apk
  
  publishToProduction:
    name: '[PRODUCTION] Publish to Google Play'
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event.inputs.forceProductionRelease
    runs-on: ubuntu-latest
    needs: [prepareCache, buildAAB, buildAPK]
    env:
      SENTRY_RELEASE: ${{ needs.prepareCache.outputs.SENTRY_RELEASE }}
    steps:
      - uses: actions/cache@v4
        with:
          path: |
            ./*
          key: ${{ github.run_id }}
      - run: |
          echo "github.event_name: ${{github.event_name}}"
          echo "github.ref: ${{github.ref}}"
          echo "github.event.inputs.forceProductionRelease: ${{github.event.inputs.forceProductionRelease}}"
      - uses: actions/download-artifact@v4
        with:
          name: aab-${{ needs.prepareCache.outputs.SENTRY_RELEASE }}
          path: aab
      - uses: actions/download-artifact@v4
        with:
          name: apk-${{ needs.prepareCache.outputs.SENTRY_RELEASE }}
          path: apk
      - uses: ViMaSter/sign-android-release@latest
        with:
          releaseDirectory: ./aab
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
      - uses: r0adkll/upload-google-play@v1.1.3
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICEACCOUNTJSON }}
          packageName: ke.mahn.gdqreminder
          track: production
          status: completed
          releaseFiles: ./aab/app-release.aab
      - uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: vimaster
          SENTRY_PROJECT: gdqreminder-mobile
        with:
          environment: production
          sourcemaps: ./dist/assets
          version: ${{ needs.prepareCache.outputs.SENTRY_RELEASE }}

  publishToBeta:
    name: '[BETA] Publish to Google Play'
    if: (github.event_name == 'push' && github.ref == 'refs/heads/beta') || github.event.inputs.forceBetaRelease
    runs-on: ubuntu-latest
    needs: [prepareCache, buildAAB, buildAPK]
    env:
      SENTRY_RELEASE: ${{ needs.prepareCache.outputs.SENTRY_RELEASE }}
    steps:
      - uses: actions/cache@v4
        with:
          path: |
            ./*
          key: ${{ github.run_id }}
      - run: |
          echo "github.event_name: ${{github.event_name}}"
          echo "github.ref: ${{github.ref}}"
          echo "github.event.inputs.forceBetaRelease: ${{github.event.inputs.forceBetaRelease}}"
      - uses: actions/download-artifact@v4
        with:
          name: aab-${{ needs.prepareCache.outputs.SENTRY_RELEASE }}
          path: aab
      - uses: actions/download-artifact@v4
        with:
          name: apk-${{ needs.prepareCache.outputs.SENTRY_RELEASE }}
          path: apk
      - uses: ViMaSter/sign-android-release@latest
        with:
          releaseDirectory: ./aab
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
      - uses: r0adkll/upload-google-play@v1.1.3
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICEACCOUNTJSON }}
          packageName: ke.mahn.gdqreminder
          track: beta
          status: completed
          releaseFiles: ./aab/app-release.aab
      - uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: vimaster
          SENTRY_PROJECT: gdqreminder-mobile
        with:
          environment: beta
          sourcemaps: ./dist/assets
          version: ${{ needs.prepareCache.outputs.SENTRY_RELEASE }}

  githubRelease:
    name: Publish to GitHub Releases
    if: ((github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event.inputs.forceProductionRelease) || ((github.event_name == 'push' && github.ref == 'refs/heads/beta') || github.event.inputs.forceBetaRelease)
    runs-on: ubuntu-latest
    needs: [prepareCache, buildAAB, buildAPK]
    env:
      SENTRY_RELEASE: ${{ needs.prepareCache.outputs.SENTRY_RELEASE }}
    steps:
      - uses: actions/cache@v4
        with:
          path: |
            ./*
          key: ${{ github.run_id }}
      - uses: actions/download-artifact@v4
        with:
          name: apk-${{ needs.prepareCache.outputs.SENTRY_RELEASE }}
          path: apk
      - uses: actions/download-artifact@v4
        with:
          name: aab-${{ needs.prepareCache.outputs.SENTRY_RELEASE }}
          path: aab
      - run: |
          cd apk
          find . -name "*.apk" -exec mv {} ../gdqreminder-${{ needs.prepareCache.outputs.SENTRY_RELEASE }}.apk \;
          cd ..
          
          cd aab
          find . -name "*.aab" -exec mv {} ../gdqreminder-${{ needs.prepareCache.outputs.SENTRY_RELEASE }}.aab \;
          cd ..
          echo "${{ needs.prepareCache.outputs.SENTRY_RELEASE }}"
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - name: Add AAB and APK to GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.prepareCache.outputs.SENTRY_RELEASE }}
          artifacts: "*.aab,*.apk"
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
