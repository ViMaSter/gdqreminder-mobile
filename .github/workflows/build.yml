name: Android build

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
    inputs:
      forceRelease:
        description: Force Google Play release?
        required: true
        default: false
        type: boolean

jobs:
  prepareCache:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - run: | 
          npm ci
          npx semantic-release -d --plugins "@semantic-release/commit-analyzer, @semantic-release/release-notes-generator, @semantic-release/npm"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: npm run build
      - run: npx cap sync

      # upload current working directory to cache
      - uses: actions/cache@v3
        with:
          path: |
            ./*
          # use the current run id as key
          key: ${{ github.run_id }}
          
  buildAAB:
    runs-on: ubuntu-latest
    needs: [prepareCache]
    steps:
      # restore cache from prepareCache step
      - uses: actions/cache@v3
        with:
          path: |
            ./*
          # use the current run id as key
          key: ${{ github.run_id }}

      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - run: cd android && ./gradlew :app:bundleRelease
        shell: bash

      - uses: actions/upload-artifact@v3
        with:
          name: aab-v${{ github.run_number }}
          path: ./android/app/build/outputs/bundle/release/app-release.aab

  buildAPK:
    runs-on: ubuntu-latest
    needs: [prepareCache]
    steps:
      # restore cache from prepareCache step
      - uses: actions/cache@v3
        with:
          path: |
            ./*
          # use the current run id as key
          key: ${{ github.run_id }}

      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - run: cd android && ./gradlew assembleDebug
        shell: bash

      - uses: actions/upload-artifact@v3
        with:
          name: apk-v${{ github.run_number }}
          path: ./android/app/build/outputs/apk/debug/app-debug.apk
       
  publish:
    runs-on: ubuntu-latest
    if: ((github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event.inputs.forceRelease == 'true')
    needs: [buildAAB]
    steps:
      - run: |
          echo "github.event_name: ${{github.event_name}}"
          echo "github.ref: ${{github.ref}}"
          echo "github.event.inputs.forceRelease: ${{github.event.inputs.forceRelease}}"

      - uses: actions/download-artifact@v3
        with:
          name: aab-v${{ github.run_number }}
          path: aab
      - uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: ./aab
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
      - uses: r0adkll/upload-google-play@v1.0.19
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICEACCOUNTJSON }}
          packageName: ke.mahn.gdqreminder
          track: internal
          status: completed
          releaseFiles: ./aab/app-release.aab
          
  githubRelease:
    runs-on: ubuntu-latest
    needs: [buildAAB, buildAPK]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: apk-v${{ github.run_number }}
          path: apk
      - uses: actions/download-artifact@v3
        with:
          name: aab-v${{ github.run_number }}
          path: aab
      - run: |
          cd apk
          find . -name "*.apk" -exec mv {} gdqreminder-v${{ env.PACKAGE_VERSION }}.apk \;
          cd ..
          
          cd aab
          find . -name "*.aab" -exec mv {} gdqreminder-v${{ env.PACKAGE_VERSION }}.aab \;
          cd ..

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: Create commit and create GitHub release
        run: |
          npm ci
          npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}